{"version":3,"sources":["assets/images/logo.svg","components/Hero/Hero.js","components/Label/Label.js","components/Input/Input.js","components/Form/Form.js","components/Submissions/Submissions.js","utils.js","App.js","index.js"],"names":["module","exports","Hero","className","src","logo","alt","to","Label","id","title","isRequired","htmlFor","Input","placeholder","type","value","maxLength","onChange","Form","inputFields","inputValues","onInputChange","onSubmit","useState","isFormSubmitted","setIsFormSubmitted","isSubmitButtonDisabled","Object","keys","some","inputValue","trim","map","label","key","ev","onClick","setTimeout","preventDefault","disabled","role","aria-label","Submissions","submissions","length","submission","index","inputKey","string","charAt","toUpperCase","slice","toLowerCase","App","formData","reduce","inputField","formInputValues","setFormInputValues","setSubmissions","exact","path","target","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8676e780.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.785c6b41.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/logo.svg';\n\nconst Hero = () => {\n  return (\n    <section className=\"hero\">\n      <div className=\"hero__header\">\n        <img src={logo} alt=\"logo\"></img>\n      </div>\n      <div className=\"hero__claim\">\n        <div>\n          <h1>\n            <span>Hey!</span> Could you fill this form for us?\n          </h1>\n          <Link to=\"/submissions\">\n            <p className=\"hero__link\">Show all submissions</p>\n          </Link>\n        </div>\n        <div className=\"hero__decoration\"></div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Label = ({ id, title, isRequired }) => {\n  return (\n    <label className=\"label\" htmlFor={id}>\n      {title} {isRequired && '*'}\n    </label>\n  );\n};\n\nLabel.propTypes = {\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isRequired: PropTypes.bool,\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ id, placeholder, type, value, maxLength, onChange }) => {\n  return (\n    <input\n      id={id}\n      placeholder={placeholder}\n      type={type}\n      maxLength={maxLength}\n      value={value}\n      onChange={onChange}\n      className=\"input\"\n    ></input>\n  );\n};\n\nInput.propTypes = {\n  id: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  maxLength: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Label from '../Label/Label';\nimport Input from '../Input/Input';\n\nconst Form = ({ inputFields, inputValues, onInputChange, onSubmit }) => {\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n  const isSubmitButtonDisabled = Object.keys(inputValues).some(\n    (inputValue) => !inputValues[inputValue].trim()\n  );\n\n  const handleSubmitButtonClick = (ev) => {\n    setIsFormSubmitted(true);\n    setTimeout(() => setIsFormSubmitted(false), 2000);\n    onSubmit();\n    ev.preventDefault();\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__decoration\"></div>\n      <h2 className=\"form__claim\">\n        <span>Hey!</span> Could you fill this form for us?\n      </h2>\n      <Link to=\"/submissions\">\n        <p className=\"form__link\">Show all submissions</p>\n      </Link>\n      {inputFields.map(({ label, id, placeholder, type, maxLength }) => (\n        <div className=\"form__group\" key={id}>\n          <Label id={id} title={label} isRequired></Label>\n          <Input\n            id={id}\n            placeholder={placeholder}\n            type={type}\n            maxLength={maxLength}\n            value={inputValues[id]}\n            onChange={(ev) => onInputChange(ev, id)}\n          />\n        </div>\n      ))}\n      <input\n        type=\"submit\"\n        value=\"Submit\"\n        onClick={handleSubmitButtonClick}\n        className=\"form__submitBtn\"\n        disabled={isSubmitButtonDisabled}\n      />\n      <div className=\"form__submittedMessageContainer\">\n        {isFormSubmitted && (\n          <p className=\"form__submittedMessage\">\n            Your form has been submitted successfully!{' '}\n            <span role=\"img\" aria-label=\"icon\">\n              üíÉüèª\n            </span>\n          </p>\n        )}\n      </div>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  inputFields: PropTypes.array.isRequired,\n  inputValues: PropTypes.object.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport { capitalize } from '../../utils';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport logo from '../../assets/images/logo.svg';\n\nconst Submissions = ({ submissions }) => {\n  if (!submissions.length)\n    return (\n      <section className=\"error\">\n        <img src={logo} alt=\"logo\" className=\"error__img\" />\n        <p className=\"error__message\">\n          There are not submissions yet, you can{' '}\n          <span>\n            <Link to=\"/\">go back to main page</Link>\n          </span>\n          !\n        </p>\n      </section>\n    );\n\n  return (\n    <section className=\"submissions\">\n      <div className=\"submissions__hero\">\n        <img src={logo} alt=\"logo\" />\n      </div>\n      <div className=\"submissions__container\">\n        <h1 className=\"submissions__title\">Submission list</h1>\n        <ul className=\"submissions__list\">\n          {submissions.map((submission, index) => (\n            <li className=\"submissions__listElement\" key={index}>\n              <h2 className=\"submissions__listElementTitle\">\n                Submission <span>{index + 1}</span>\n              </h2>\n              {Object.keys(submission).map((inputKey) => (\n                <p key={inputKey}>\n                  {capitalize(inputKey)}: {submission[inputKey]}\n                </p>\n              ))}\n            </li>\n          ))}\n        </ul>\n        <Link to=\"/\">\n          <button className=\"submissions__btn\">Back to main page</button>\n        </Link>\n      </div>\n    </section>\n  );\n};\n\nSubmissions.propTypes = {\n  submissions: PropTypes.array,\n};\n\nexport default Submissions;\n","export const capitalize = (string) =>\n  string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n","import React, { useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport formData from './data/formData.json';\nimport Hero from './components/Hero/Hero';\nimport Form from './components/Form/Form';\nimport Submissions from './components/Submissions/Submissions';\n\nconst initalizeFormInputValues = () =>\n  formData.inputFields.reduce((inputValues, inputField) => {\n    inputValues[inputField.id] = '';\n    return inputValues;\n  }, {});\n\nconst App = () => {\n  const [formInputValues, setFormInputValues] = useState(\n    initalizeFormInputValues()\n  );\n  const [submissions, setSubmissions] = useState([]);\n\n  const handleInputChange = (ev, id) =>\n    setFormInputValues({ ...formInputValues, [id]: ev.target.value });\n\n  const handleFormSubmit = () => {\n    console.log(formInputValues);\n    setSubmissions([...submissions, formInputValues]);\n  };\n\n  return (\n    <section className=\"app\">\n      <Switch>\n        <Route exact path=\"/\">\n          <Hero />\n          <Form\n            inputFields={formData.inputFields}\n            inputValues={formInputValues}\n            onInputChange={handleInputChange}\n            onSubmit={handleFormSubmit}\n          />\n        </Route>\n        <Route path=\"/submissions\">\n          <Submissions submissions={submissions} />\n        </Route>\n      </Switch>\n    </section>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}